name: Salesforce CI/CD Pipeline

on:
  push:
    branches:
      - main
      - develop

jobs:
  retrieve-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up Salesforce CLI
        uses: sfdx-actions/setup-sfdx@v1

      - name: Create the server.key file from the secret variable
        run: echo "${{ secrets.SERVER_KEY }}" | base64 --decode > server.key
        shell: bash
        
      - name: Authenticate to Salesforce
        run: sfdx force:auth:jwt:grant --clientid ${{ secrets.SALESFORCE_CONSUMER_KEY }} --jwtkeyfile server.key --username ${{ secrets.SALESFORCE_USERNAME }} --setdefaultdevhubusername --instanceurl https://login.salesforce.com


      - name: Retrieve Metadata from Salesforce
        run: sfdx force:mdapi:retrieve -r retrieved-md -k package.xml -u ${{ secrets.USERNAME }}

      - name: Unzip retrieved metadata
        run: unzip retrieved-md/unpackaged.zip -d retrieved-md/src

      - name: Convert retrieved metadata to SFDX format
        run: sfdx force:mdapi:convert -r retrieved-md/src -d force-app

      - name: Identify changes
        id: files_changed
        run: |
          echo "::set-output name=changed_files::$(git diff --name-only HEAD~1)"

      - name: Deploy changes if there are any
        if: steps.files_changed.outputs.changed_files != ''
        run: |
          # Add logic to filter out changes that need to be deployed based on the previous step's output
          # This is a placeholder for the deployment command
          # You would typically use `sfdx force:source:deploy` with the path to the changed files
          echo "Deploying the following changes:"
          echo ${{ steps.files_changed.outputs.changed_files }}
          # Deploy command goes here